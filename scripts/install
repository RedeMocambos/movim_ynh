#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
password=$YNH_APP_ARG_PASSWORD
language=$YNH_APP_ARG_LANGUAGE
ssoenabled=$YNH_APP_ARG_SSOENABLED
timezone=$(cat /etc/timezone)

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=ssoenabled --value=$ssoenabled

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Configuring firewall..." --weight=2

# Find a free port
port=$(ynh_find_port 9537)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --time --weight=1

# Install packages
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Creating a PostgreSQL database..." --weight=2

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
db_pwd=$(ynh_string_random --length=30)

ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_app_setting_set --app=$app --key=db_pwd  --value=$db_pwd

ynh_psql_test_if_first_run
ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --time --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --time --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --time --weight=1

# Create a dedicated php-fpm config
#ynh_replace_string --match_string="YHTZ" --replace_string="$timezone" --target_file=../conf/php-fpm.conf

ynh_add_fpm_config

#=================================================
# SET CONFIGURATION FILE
#=================================================
ynh_script_progression --message="Modifying a config file..."

cp ../conf/db.example.inc.php  $final_path/config/db.inc.php

ynh_replace_string --match_string="__DB_USER__" --replace_string="$db_user" --target_file="$final_path/config/db.inc.php"
ynh_replace_string --match_string="__DB_PWD__"  --replace_string="$db_pwd"  --target_file="$final_path/config/db.inc.php"
ynh_replace_string --match_string="__DB_NAME__" --replace_string="$db_name" --target_file="$final_path/config/db.inc.php"

ynh_store_file_checksum --file="$final_path/config/db.inc.php"

#=================================================
# Install PHP dependencies using composer
#=================================================

# (
# 	cd "$final_path"
# 	export COMPOSER_HOME=$final_path
# 	curl -sS https://getcomposer.org/installer | php -- --install-dir="$final_path" \
# 		&& php composer.phar config --global discard-changes true --quiet \
# 		&& php composer.phar install --no-interaction --quiet
# )

pushd "$final_path" || ynh_die
	composer install --no-interaction --quiet
	composer $app:migrate
popd || ynh_die

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

ynh_replace_string --match_string="__URL__"  --replace_string="${domain}${path_url}" --target_file=../conf/systemd.service
ynh_replace_string --match_string="__PORT__" --replace_string="$port"                --target_file=../conf/systemd.service

ynh_add_systemd_config

#=================================================
# Set-up database and configuration
#=================================================
# cd "$final_path"
# php composer.phar movim:migrate

# (
# 	cd "$final_path"
# 	php mud.php db --set
# 	php mud.php config --loglevel=1 \
# 	    --locale="$language" --timezone="$timezone" \
# 	    --username="$admin" --password="$password"
# )

#=================================================
# GENERIC FINALIZATION
#=================================================
# SET PERMISSIONS
#=================================================

# TODO: use more strict permissions
# chown -R "$app":www-data "$final_path"
# find "${final_path}/" -type f -print0 | xargs -0 chmod 0644
# find "${final_path}/" -type d -print0 | xargs -0 chmod 0755
# chmod 400 "${final_path}/config/db.inc.php"

chown www-data $final_path && chown www-data $final_path/public && chmod u+rwx $final_path

#=================================================
# SETUP SSOWAT
#=================================================

# SSOwat configuration
if [[ "$ssoenabled" = "No" ]]; then
    ynh_app_setting_set "$app" skipped_uris "/"
   (cd "$final_path" && php mud.php config --xmppwhitelist="$domain")
    undo_sso_patch
else
    ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last